on:
    push: 
        branches: 
            - main

jobs:
    build-image:
        runs-on: ubuntu-latest
        env: 
            DOCKER_USER: ${{secrets.DOCKER_USERNAME}}
        steps:
            - name: Checkout Develop
              uses: actions/checkout@v3

            - name: DockerHub Login
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            - name: Build Image And Push
              run: docker compose build plant-api && docker compose push
    
    client-deploy:
        runs-on: hai-server
        needs: build-image
        env: 
            DOCKER_USER: ${{secrets.DOCKER_USERNAME}}
            PORT: ${{secrets.PORT}}
            JWT_SECRET: ${{secrets.JWT_SECRET}}
            NODE_ENV: ${{secrets.NODE_ENV}}
            DATABASE: ${{secrets.DATABASE}}
            USERNAME: ${{secrets.USERNAME}}
            PASSWORD: ${{secrets.PASSWORD}}
            HOST: ${{secrets.HOST}}
            PAYOS_CLIENT_ID: ${{secrets.PAYOS_CLIENT_ID}}
            PAYOS_API_KEY: ${{secrets.PAYOS_API_KEY}}
            PAYOS_CHECKSUM_KEY: ${{secrets.PAYOS_CHECKSUM_KEY}}
        steps:
          - name: Checkout Develop
            uses: actions/checkout@v3
          - name: DockerHub Login
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}
              
          - name: Clean Container, Image And Prepare For Deploy
            run: docker compose -f docker-compose.prod.yaml -p plant-project down plant-api --rmi all -v

          - name: Docker Pull Image For Deploy
            run: docker compose -f docker-compose.prod.yaml pull plant-api
            
          - name: Infisical Login && Deploy Client
            run: docker compose -f docker-compose.prod.yaml -p plant-project up plant-api -d

